#include <stdio.h>
#include <stdlib.h>

// Structure to represent a process
typedef struct {
    int pid; // Process ID
    int executionTime; // Execution time of the process
} Process;

// Function to compare two processes based on their execution times
int compare(const void *a, const void *b) {
    Process *p1 = (Process *)a;
    Process *p2 = (Process *)b;
    return p1->executionTime - p2->executionTime;
}

// Function to schedule the processes
void schedule(Process *processes, int n) {
    // Sort the processes based on their execution times
    qsort(processes, n, sizeof(Process), compare);

    // Execute the processes in the order of their execution times
    for (int i = 0; i < n; i++) {
        printf("Executing process %d with execution time %d\n", processes[i].pid, processes[i].executionTime);
    }
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    Process *processes = (Process *)malloc(n * sizeof(Process));

    printf("Enter the process IDs and execution times:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d %d", &processes[i].pid, &processes[i].executionTime);
    }

    schedule(processes, n);

    free(processes);

    return 0;
}
